<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
<title type="text">HatMatrix</title>
<generator uri="https://github.com/mojombo/jekyll">Jekyll</generator>
<link rel="self" type="application/atom+xml" href="/feed.xml" />
<link rel="alternate" type="text/html" href="" />
<updated>2016-10-21T14:20:24+00:00</updated>
<id>/</id>
<author>
  <name>HatMatrix</name>
  <uri>/</uri>
  <email>hatmatrix42@gmail.com</email>
</author>


<entry>
  <title type="html"><![CDATA[Einstein]]></title>
  <link rel="alternate" type="text/html" href="/cn/%E7%94%9F%E6%B4%BB/Einstein-pic/"/>
  <id>/cn/%E7%94%9F%E6%B4%BB/Einstein-pic</id>
  <published>2016-10-21T00:00:00+00:00</published>
  <updated>2016-10-21T00:00:00+00:00</updated>
  <author>
    <name>HatMatrix</name>
    <uri></uri>
    <email>hatmatrix42@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;&lt;img src=&quot;http://oe078ltqc.bkt.clouddn.com/FullSizeRender.jpg&quot; alt=&quot;Einstein&quot; /&gt;&lt;/p&gt;

&lt;p&gt;#EOF&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;/cn/%E7%94%9F%E6%B4%BB/Einstein-pic/&quot;&gt;Einstein&lt;/a&gt; was originally published by HatMatrix at &lt;a href=&quot;&quot;&gt;HatMatrix&lt;/a&gt; on October 21, 2016.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[独墅湖教堂]]></title>
  <link rel="alternate" type="text/html" href="/cn/%E7%94%9F%E6%B4%BB/dushu-church/"/>
  <id>/cn/%E7%94%9F%E6%B4%BB/dushu-church</id>
  <published>2016-09-24T00:00:00+00:00</published>
  <updated>2016-09-24T00:00:00+00:00</updated>
  <author>
    <name>HatMatrix</name>
    <uri></uri>
    <email>hatmatrix42@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;&lt;img src=&quot;http://oe078ltqc.bkt.clouddn.com/IMG_2230.JPG-hm42&quot; alt=&quot;独墅湖耶稣像1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://oe078ltqc.bkt.clouddn.com/IMG_2231.JPG-hm42&quot; alt=&quot;独墅湖耶稣像2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://oe078ltqc.bkt.clouddn.com/IMG_2229.JPG-hm42&quot; alt=&quot;独墅湖十字架&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://oe078ltqc.bkt.clouddn.com/IMG_2232.JPG-hm42&quot; alt=&quot;独墅湖&quot; /&gt;&lt;/p&gt;

&lt;p&gt;#EOF&lt;/p&gt;


  &lt;p&gt;&lt;a href=&quot;/cn/%E7%94%9F%E6%B4%BB/dushu-church/&quot;&gt;独墅湖教堂&lt;/a&gt; was originally published by HatMatrix at &lt;a href=&quot;&quot;&gt;HatMatrix&lt;/a&gt; on September 24, 2016.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[在slidify中使用rCharts]]></title>
  <link rel="alternate" type="text/html" href="/cn/r/rcharts-to-silidify/"/>
  <id>/cn/r/rcharts-to-silidify</id>
  <published>2016-08-08T00:00:00+00:00</published>
  <updated>2016-08-08T00:00:00+00:00</updated>
  <author>
    <name>HatMatrix</name>
    <uri></uri>
    <email>hatmatrix42@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;slidify制作slides虽然很方便，但是插入rCharts等交互图片的时候会存在无法显示的问题。网上能找到很多解决方案，但是都比较复杂，本文介绍一个简单的实现方法——使用&lt;code&gt;iframe&lt;/code&gt;元素插入到slides中。&lt;/p&gt;

&lt;p&gt;实现的步骤为&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;把&lt;code&gt;rCharts&lt;/code&gt;生成的交互结果存成html&lt;/li&gt;
  &lt;li&gt;使用&lt;code&gt;iframe&lt;/code&gt;插入保存的html&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以下演示下实现的整个过程&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;```{r defFun,echo=FALSE,warning=FALSE}
renderHtmlPlot &amp;lt;- function(obj,fileName){
  fileName &amp;lt;- paste0(&amp;quot;/path/to/path/html/&amp;quot;,
                     fileName,&amp;quot;.html&amp;quot;)
  obj$save(fileName)
  res &amp;lt;- paste0(&amp;quot;&amp;lt;iframe src=&amp;#39;&amp;quot;,fileName,&amp;quot;&amp;#39;&amp;gt;&amp;lt;/iframe&amp;gt;&amp;quot;)
  return(res)
}
```

## 绘制交互
```{r test1,echo=FALSE,results=&amp;#39;asis&amp;#39;,warning=FALSE,}
require(rCharts)
n1 &amp;lt;- nPlot(BrowPV ~ Date, 
      data = dat, 
       group = &amp;quot;Group&amp;quot;,
      type = &amp;#39;lineWithFocusChart&amp;#39;)

## 修复X轴的显示
n1$xAxis(
  tickFormat = 
    &amp;quot;#!
      function(d){
        f =  d3.time.format.utc(&amp;#39;%Y-%m-%d&amp;#39;);
        return f(new Date( d*24*60*60*1000 ));
      }
    !#&amp;quot;
)
cat(renderHtmlPlot(n1,fileName = &amp;quot;test1&amp;quot;))
```&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;


  &lt;p&gt;&lt;a href=&quot;/cn/r/rcharts-to-silidify/&quot;&gt;在slidify中使用rCharts&lt;/a&gt; was originally published by HatMatrix at &lt;a href=&quot;&quot;&gt;HatMatrix&lt;/a&gt; on August 08, 2016.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[slidify中的中文乱码解决方案]]></title>
  <link rel="alternate" type="text/html" href="/cn/r/slidify-mojibake/"/>
  <id>/cn/r/slidify-mojibake</id>
  <published>2016-08-02T00:00:00+00:00</published>
  <updated>2016-08-02T00:00:00+00:00</updated>
  <author>
    <name>HatMatrix</name>
    <uri></uri>
    <email>hatmatrix42@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;slidify一直是做slides的一个很好的选择，但是在Windows平台下的一直存在乱码的问题。引起的原因
就是Windows下的编码混乱，鉴于编码这件事情本来就是一个无敌大坑，所以就不展开说了。&lt;/p&gt;

&lt;p&gt;之前为了解决中文问题，最快的方法就是换到Mac或者Linux上去，但是仍然无法解决在必须用Windows
的场合下遇到的问题。&lt;/p&gt;

&lt;p&gt;为了测底解决中文的乱码问题，也在网上查了相关的资料，从Stack Overflow到github都没有找到比较好的
解决方案，于是打开了slidify的源码自己改改吧。查看了代码，发现主要有三个地方存在编码问题。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code&gt;readLines&lt;/code&gt;在读取数据的时候需要指定编码，否则在Windows下会跟随系统，默认为&lt;code&gt;GBK&lt;/code&gt;的编码&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code&gt;yaml.load&lt;/code&gt;是&lt;code&gt;yaml&lt;/code&gt;package中的函数，返回的字符串是没有编码信息的，查看了源码是C写成的，
本来是想改C代码的，但是本着迅速解决问题的原则，直接对返回值进行&lt;code&gt;Encoding&lt;/code&gt;操作了，改成了&lt;code&gt;UTF-8&lt;/code&gt;
的编码&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code&gt;cat&lt;/code&gt;用来生成最后的html文件，这里也是没有指定写文件的时候的编码的，这样的问题就是网页指定
的编码是&lt;code&gt;UTF-8&lt;/code&gt;,但是最后写入是使用&lt;code&gt;GBK&lt;/code&gt;编码写入的。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;解决以上三个问题也就解决了中文乱码的问题。最后，放上修改版本的slidify的链接，可以直接访问我的
&lt;a href=&quot;https://github.com/junjiemao/slidify&quot;&gt;github&lt;/a&gt;。使用&lt;code&gt;devtools::install_github('junjiemao/slidify')&lt;/code&gt;
即可安装使用。&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;/cn/r/slidify-mojibake/&quot;&gt;slidify中的中文乱码解决方案&lt;/a&gt; was originally published by HatMatrix at &lt;a href=&quot;&quot;&gt;HatMatrix&lt;/a&gt; on August 02, 2016.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[使用Google的小技巧]]></title>
  <link rel="alternate" type="text/html" href="/cn/google/google-search-tips/"/>
  <id>/cn/google/google-search-tips</id>
  <published>2015-03-05T00:00:00+00:00</published>
  <updated>2015-03-05T00:00:00+00:00</updated>
  <author>
    <name>HatMatrix</name>
    <uri></uri>
    <email>hatmatrix42@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;首先反驳下，百度更懂中文是不成立的，搜索下『黃』（不是『黄』，而是『黃』），会发现百度给出的结果全部都是关于『黄』的，洋鬼子Google在第二条和第三条给出了正确的结果。&lt;/p&gt;

&lt;p&gt;一般的搜索就会觉得其质量之高，而Google的高级指令则更加令人感到其强大，下面介绍一些小技巧和常见操作符的使用，本文大部分内容都摘自&lt;a href=&quot;http://book.douban.com/subject/3676292/&quot;&gt;Google Hacking技术手册&lt;/a&gt;，且只是整本书的冰山一角，想要自定义个人搜索引擎的看官可以看看这本书。&lt;/p&gt;

&lt;h1 id=&quot;section&quot;&gt;小技巧&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;首先得科学上网&lt;/li&gt;
  &lt;li&gt;可以直接对图片进行搜索&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;www.google.com/preferences&quot;&gt;偏好设置&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;防止跳转，如果你在中国大陆，但是你不想使用.hk的Google，那么可以使用www.google.com/ncr来防止跳转&lt;/li&gt;
  &lt;li&gt;Google不区分大小写&lt;/li&gt;
  &lt;li&gt;使用&lt;strong&gt;关键字&lt;/strong&gt;，&lt;strong&gt;千万&lt;/strong&gt;不要使用类似于『我的U盘无法读取了怎么办？』这种句子搜索，如果非要这样，建议换成英文试试&lt;a href=&quot;http://www.wolframalpha.com/&quot;&gt;WolframAlpha&lt;/a&gt;，会发现一个不一样的世界。&lt;/li&gt;
  &lt;li&gt;通配符合和&lt;code&gt;*nix&lt;/code&gt;中的通配符不一样&lt;/li&gt;
  &lt;li&gt;停词（比如the等等）可能会被忽略&lt;/li&gt;
  &lt;li&gt;最多搜索32个单词&lt;/li&gt;
  &lt;li&gt;Google的空格表示的是并且（AND）的意思&lt;/li&gt;
  &lt;li&gt;操作符之后不能跟空格，要不然这个操作符就会被当做搜索词来进行搜索&lt;/li&gt;
  &lt;li&gt;Google的URL语法，这个比较复杂，使用这个可以拼接出想要的查询请求&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;google&quot;&gt;Google的常见操作符&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;加号(+)会强制Google搜索后面的单词，比如搜索&lt;code&gt;tom+jerry&lt;/code&gt;的结果中会同时含有两个单词。注意：加号必须是英文的加号！如果同时搜索两个词组需要加上引号，比如&lt;code&gt;“美丽的小鹿“ +“可爱的小猪“&lt;/code&gt;，可以比较&lt;code&gt;美丽的小鹿+可爱的小猪&lt;/code&gt;之间的差别。&lt;/li&gt;
  &lt;li&gt;减号(-)会要求Google去掉包含前面一个单词但是不包含后面一个单词的结果，比如查询词语&lt;code&gt;&quot;熊猫&quot; -&quot;动物&quot;&lt;/code&gt;会搜索出包含『熊猫』但是不包含『动物』的结果。&lt;/li&gt;
  &lt;li&gt;intitle和allintitle：对标题栏中的文字进行筛选，比如搜索&lt;code&gt;intitle:duang 草泥马&lt;/code&gt;会搜索标题中有『duang』以及整个网页包括标题中有『草泥马』的结果，使用&lt;code&gt;allintitle:duang 草泥马&lt;/code&gt;则要求标题中必须同时含有这两个关键词。&lt;/li&gt;
  &lt;li&gt;allintext：只是在网页内容中搜索关键字&lt;/li&gt;
  &lt;li&gt;inurl和allinurl：使用方法和intitle类似，比如搜索&lt;code&gt;inurl:草泥马&lt;/code&gt;会得到几乎所有url中包含『草泥马』的链接。&lt;/li&gt;
  &lt;li&gt;site：可以在站内搜索，当然这得在网站允许爬虫抓取的条件下，比如想在知乎下搜索『草泥马』，但是知乎自己的搜索做的渣烂烂的怎么办呢，可以试试&lt;code&gt;草泥马 site:zhihu.com&lt;/code&gt;。注意：需要直接使用顶级域名，不能使用类似于&lt;code&gt;www.zhihu.com&lt;/code&gt;或者&lt;code&gt;www.zhihu.com/xxx&lt;/code&gt;这种。&lt;/li&gt;
  &lt;li&gt;filetype：指定搜索的文件类型，你想找本kindle的电子书（啊喂~盗版可耻啊！），那么可以试试&lt;code&gt;爱你就像爱生命 filetype:mobi&lt;/code&gt;。啊喂，有一条记录还是github的链接，好像有点讽刺。其他格式，比如xlsx，docx，pdf类似，文件的扩展名可以去filext.org上去看看。&lt;/li&gt;
  &lt;li&gt;link：搜索与当前网页存在链接的网页,比如搜索&lt;code&gt;link:www.gov.cn&lt;/code&gt;可以看到哪些网站链接了最牛逼的网站。&lt;/li&gt;
  &lt;li&gt;inanchor：与link相似，不同的是，这个搜索的不是链接，是链接对应的文本，比如我们搜索&lt;code&gt;inanchor:中华人民共和国中央人民政府&lt;/code&gt;,会得到带有『中华人民共和国中央人民政府』这个链接的网站，但是链接到哪里就不能确定了。&lt;/li&gt;
  &lt;li&gt;cache：这个可查到被删除的网页，具体适用场景你知道的。&lt;/li&gt;
  &lt;li&gt;numrange：搜索最大值和最小值之间的数，比如搜索&lt;code&gt;numrange:144-147&lt;/code&gt;，会得到含有145之间146数值的结果。&lt;/li&gt;
  &lt;li&gt;daterange：可以查询在某一段时间中发布的网页。&lt;/li&gt;
  &lt;li&gt;info：显示Google对某一个站点的摘要信息，后面必须跟一个有效的URL，试试&lt;code&gt;info:www.zhihu.com&lt;/code&gt;。&lt;/li&gt;
  &lt;li&gt;related：显示相关站点，后面也必须跟一个有效的URL，试试&lt;code&gt;related:www.v2ex.com&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;stocks:搜索股票的信息，比如&lt;code&gt;stocks:google&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;define:搜索某个术语的定义，看看这段时间最热门的PM2.5，&lt;code&gt;define:pm2.5&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;weather：查询某一个城市的天气，&lt;code&gt;weather:南京&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;


  &lt;p&gt;&lt;a href=&quot;/cn/google/google-search-tips/&quot;&gt;使用Google的小技巧&lt;/a&gt; was originally published by HatMatrix at &lt;a href=&quot;&quot;&gt;HatMatrix&lt;/a&gt; on March 05, 2015.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[dplyr中的join类函数的使用注意点]]></title>
  <link rel="alternate" type="text/html" href="/cn/r/the-dplyr-left-join/"/>
  <id>/cn/r/the-dplyr-left-join</id>
  <published>2015-01-25T00:00:00+00:00</published>
  <updated>2015-01-25T00:00:00+00:00</updated>
  <author>
    <name>HatMatrix</name>
    <uri></uri>
    <email>hatmatrix42@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;前一段时间在进行数据分析的时候，因为追究效率，就没有使用base包中的&lt;code&gt;merge&lt;/code&gt;函数，而是使用了
&lt;code&gt;dplyr::left_join&lt;/code&gt;。和&lt;code&gt;merge&lt;/code&gt;一样，在对两个数据框进行关联的时候，会对列名相同的列进行重命名，
一般都是在结尾加上x或者y。在这次使用的过程中，因为多次使用&lt;code&gt;left_join&lt;/code&gt;，并且在每次关联结束之后
没有对列名进行重命名，于是悲剧就产生了。关于悲剧是怎么产生的，下面构建了一个例子：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;require(dplyr)
# 使用left_join的得到的结果，没有返回警告
df1 &amp;lt;- data.frame(x = 1:5,y = 1:5,y.y = 5:1)
df2 &amp;lt;- data.frame(x = 1:5,y = 1:5)
lfmp &amp;lt;- left_join(df1,df2,&amp;quot;x&amp;quot;,copy = TRUE)
left_join(lfmp,df1,by=&amp;quot;x&amp;quot;,copy = TRUE)
#   x y.x y.y.x y.y.x y y.y.y
# 1 1   1     5     5 1     5
# 2 2   2     4     4 2     4
# 3 3   3     3     3 3     3
# 4 4   4     2     2 4     2
# 5 5   5     1     1 5     1

# 使用merge返回的结果，同时返回警告
metmp &amp;lt;- merge(x = df1,y = df2,by = &amp;quot;x&amp;quot;)
merge(x = metmp,y = df1,by = &amp;quot;x&amp;quot;)
#   x y.x y.y.x y.y.x y y.y.y
# 1 1   1     5     1 1     5
# 2 2   2     4     2 2     4
# 3 3   3     3     3 3     3
# 4 4   4     2     4 4     2
# 5 5   5     1     5 5     1&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;从上面的例子中可以看到，在使用&lt;code&gt;left_join&lt;/code&gt;的时候第四列的值不是期望的值，而且第三列的列名和
第四列的列名是一样的。啊哈，原来是因为列名是一样的，所以该列的值被篡改了。&lt;/p&gt;

&lt;p&gt;然后去看了&lt;code&gt;dplyr::left_join&lt;/code&gt;的源码,在&lt;code&gt;left_join_impl&lt;/code&gt;（&lt;a href=&quot;https://github.com/hadley/dplyr/blob/11dfbcacb68937312a02feb3345e000fcdb3c54e/src/dplyr.cpp#L1143&quot;&gt;代码在这里&lt;/a&gt;）
中有一个函数为&lt;code&gt;subset&lt;/code&gt;（&lt;a href=&quot;https://github.com/hadley/dplyr/blob/11dfbcacb68937312a02feb3345e000fcdb3c54e/src/dplyr.cpp#L919&quot;&gt;代码在这里&lt;/a&gt;）。
在里面我们可以看到里面修改列名的方法以及进行赋值的方法,特别需要注意的
地方为&lt;a href=&quot;https://github.com/hadley/dplyr/blob/11dfbcacb68937312a02feb3345e000fcdb3c54e/src/dplyr.cpp#L960&quot;&gt;这里&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;解决方案有两个：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;修改&lt;code&gt;subset&lt;/code&gt;这个函数的源代码&lt;/li&gt;
  &lt;li&gt;每次join之后修改列名&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;从实用和实现来说，都是第二种方案比较好。使用&lt;code&gt;left_join&lt;/code&gt;之所以容易犯以上的错误主要是因为在使用的过程
中没有出警告，而且如果列名正常的话（指没有&lt;code&gt;.x&lt;/code&gt;这种字符）是要等到第七次join才会出错的。所以，为了以后
的方便，还是把&lt;code&gt;left_join&lt;/code&gt;的R代码处理下，加上列名的判断的异常处理就可以了，修改源代码之后重新编译下，
下次再也不会出错了。哦耶~&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;/cn/r/the-dplyr-left-join/&quot;&gt;dplyr中的join类函数的使用注意点&lt;/a&gt; was originally published by HatMatrix at &lt;a href=&quot;&quot;&gt;HatMatrix&lt;/a&gt; on January 25, 2015.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[装逼，用力过猛出悲剧]]></title>
  <link rel="alternate" type="text/html" href="/cn/%E7%94%9F%E6%B4%BB/the-art-of-faking/"/>
  <id>/cn/%E7%94%9F%E6%B4%BB/the-art-of-faking</id>
  <published>2014-12-26T00:00:00+00:00</published>
  <updated>2014-12-26T00:00:00+00:00</updated>
  <author>
    <name>HatMatrix</name>
    <uri></uri>
    <email>hatmatrix42@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;最近在知乎上看到&lt;a href=&quot;http://www.zhihu.com/people/chang-jing-gu&quot;&gt;长颈菇&lt;/a&gt;讲的一个故事：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;郑渊洁在1986年参加过一个作家笔会，在会上作家们大谈自己看过的书，有人问他，你有没有看过某个俄罗斯作家的书？ 
   他摇摇头，对方大惊：你连他的书都没有看过你怎么写作。&lt;/p&gt;

  &lt;p&gt;轮到郑渊洁发言时，他说：我最近在看库斯卡娅的书，特别受启发，你们看过吗？
   70％的人点点头。然后郑渊洁说：这个名字是我瞎编的。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;关于这个故事的真假没有考证过，不过看到这里的时候还是感觉蛮好笑的。像我这种反应比正常人慢0.61803398875秒的人来说，
突然意识到这种事情在程序猿中不是常有的事么，然后就想到了很久之前在豆瓣上看到的一个线上活动
&lt;a href=&quot;http://www.douban.com/online/11586889/&quot;&gt;别装了，敢不敢贴出你假装读过但实际没读过的书&lt;/a&gt;，
看了几页，张张照片都是biger闪闪的。以下几本书榜上有名：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;《算法导论》（INTRODUCTION TO ALGORITHMS） 可能因为带了个INTRODUCTION，这个反正很多人假装读过，可是这个介绍
和那个给你介绍姑娘的介绍不是同一个东西啊。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;《计算机程序的构造和解释》（SICP）这个应该是被封面上的魔法师欺骗了，感觉萌萌哒，读起来就困困哒。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;《统计学习基础》（The Elements of Statisticcal Learning,ELS）这个绝壁是被ELEMENTS欺骗的，这是基础那什么是进阶？ 
看过这个以后，我再装逼至少要看下简介的。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.wikiwand.com/zh/%E5%B0%A4%E5%88%A9%E8%A5%BF%E6%96%AF&quot;&gt;《尤利西斯》（Ulysses）&lt;/a&gt;
这个装逼太大力了，必死无疑，看维基百科的介绍和其他评论，估计普通人是不会去看这种东西的。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;《计算机程序设计艺术》（The Art of Computer Programming）这个和尤利西斯差不多的感觉吧。嗯~，Knuth爷爷又得一知音。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;后来，我学会了怎么大力出奇迹而又不会用力过猛：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;书得有名&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;必须通俗&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;不读完，简介得看下，就可以发挥了&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;比如，这些就是是正确的示范：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;《大数据》（Big Data）&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;《失控：机器、社会与经济的新生物学》（Out of Control: The New Biology of Machines, Social Systems, and the Economic World）&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;《枪炮、病菌与钢铁》（Guns, Germs and Steel: The Fates of Human Societies）&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;脑洞大的话，一边看一边出奇迹。啊哈~，我要去看《失控》了，因为我真的看不懂SICP啊，要死了要死了（逃~~&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;/cn/%E7%94%9F%E6%B4%BB/the-art-of-faking/&quot;&gt;装逼，用力过猛出悲剧&lt;/a&gt; was originally published by HatMatrix at &lt;a href=&quot;&quot;&gt;HatMatrix&lt;/a&gt; on December 26, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[老残游记]]></title>
  <link rel="alternate" type="text/html" href="/cn/%E7%94%9F%E6%B4%BB/lu_mountain/"/>
  <id>/cn/%E7%94%9F%E6%B4%BB/lu_mountain</id>
  <published>2014-04-14T00:00:00+00:00</published>
  <updated>2014-04-14T00:00:00+00:00</updated>
  <author>
    <name>HatMatrix</name>
    <uri></uri>
    <email>hatmatrix42@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;在去庐山之前，我以为我只是一个有病的年轻人，比如那几乎不可治愈的拖延症和莫名其妙的自责。在去之前就打算回来后写一篇什么东西的，本来想好的名字是『一个有病的年轻人去山里面转了一圈后终于幡然醒悟打算重新做人的感人故事』，可是后来我发现现在的我只有两个字可以形容『老残』。&lt;/p&gt;

&lt;p&gt;此行是在辞职以后，所以感觉还是很好的，八点的火车六点多就到火车站了，我还是蛮喜欢下午六七点的玄武湖的，这个时候的风和光都恰到好处。本来是想辞职之后好好在南京转转的，但是因为各种琐事未能成行，想想还是挺遗憾的，下次再来南京就应该称之为『来南京』而不是以前的『回南京』了。去柴桑的激动已经战胜我对秣陵的留恋。&lt;/p&gt;

&lt;p&gt;等到小伙伴们以后就踏上了前往柴桑的火车，可能太兴奋了，在车上吃着零食打着扑克牌这么『炫酷』的事之前还是没有做过的。关键是牌技烂的可以，在过道上的大妈都看不下去了。再后来的后来就撑不住，不知道当年周公瑾去柴桑见吴主孙权是骑马去的还是坐船去的，要是骑马就得累死了，反正我坐火车算是累翻了。&lt;/p&gt;

&lt;p&gt;终于熬过了在火车上的煎熬，按照之前的计划我们应该去M记的，但是里面已经塞满了人，于是奔向了大娘睡觉，啊不，水饺。结果发现面和粉丝是这样的，貌似连水都没有烧开。于是下楼问大娘要开水泡面，大娘说没有开水。看来煮面的水不是好像没开而是真的没开。&lt;/p&gt;
&lt;figure&gt;
	&lt;a href=&quot;https://farm3.staticflickr.com/2861/13822055364_cdfa8663b9_b.jpg&quot;&gt;&lt;img src=&quot;https://farm3.staticflickr.com/2861/13822055364_cdfa8663b9_c.jpg&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;在被大娘坑了之后，又被黑车司机坑了一把，还在我和小伙伴么机智，没有越陷越深，结果我们就流落在了庐山景区的大门口，于是我们在山下看了庐山的日出。然后苦逼地等到了八点多才上山。&lt;/p&gt;
&lt;figure&gt;
	&lt;a href=&quot;https://farm4.staticflickr.com/3761/13821750493_e7b200d661_b.jpg&quot;&gt;&lt;img src=&quot;https://farm4.staticflickr.com/3761/13821750493_e7b200d661_c.jpg&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;figure&gt;
	&lt;a href=&quot;https://farm8.staticflickr.com/7384/13822065674_c6d39da4c8_b.jpg&quot;&gt;&lt;img src=&quot;https://farm8.staticflickr.com/7384/13822065674_c6d39da4c8_b.jpg&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;终于登上了去牯岭镇的大巴，24Km的盘山公路还是挺刺激的，算是把命交个了司机，车在盘山公路上从一座山穿到另外一座山上。小伙伴中有一位车神差点没能抗住这么刺激的弯道。由于之前就找好了住的地方，所以到了镇上很快就安顿下来了。牯岭镇还是很不错的，很难想象一座建在山上的城镇能这么繁华。&lt;/p&gt;
&lt;figure&gt;
	&lt;a href=&quot;https://farm8.staticflickr.com/7023/13845591685_040d650117_b.jpg&quot;&gt;&lt;img src=&quot;https://farm8.staticflickr.com/7023/13845591685_040d650117_c.jpg&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;figure&gt;
	&lt;a href=&quot;https://farm8.staticflickr.com/7358/13823521265_86ab346b52_b.jpg&quot;&gt;&lt;img src=&quot;https://farm8.staticflickr.com/7358/13823521265_86ab346b52_c.jpg&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;上午吃完饭之后，就开始出门玩耍了，在第一个景点就遭到了撕咬，直接致残，凶手已被拍照。我绝对是无辜的，有种在街头走着走着被人开了一抢走一个空包的感觉。得了，下一个景点暂时定位医院吧。&lt;/p&gt;
&lt;figure&gt;
	&lt;a href=&quot;https://farm8.staticflickr.com/7035/13845664855_c0cae3f966_b.jpg&quot;&gt;&lt;img src=&quot;https://farm8.staticflickr.com/7035/13845664855_c0cae3f966_c.jpg&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;
&lt;p&gt;想我三次去山里，第一次去栖霞山被马蜂蜇，第二次去黄山掉水坑，这次被猴子咬，大山是我有多大的仇啊。嗯~~下次还是去海边比较保险。&lt;/p&gt;

&lt;p&gt;然后去了趟医院接下来一切都顺利了。其实风景还是挺不错的，关键也许是拍照技术比较好。&lt;/p&gt;
&lt;figure&gt;
	&lt;a href=&quot;https://farm8.staticflickr.com/7013/13847990574_90df3ecdb9_b.jpg&quot;&gt;&lt;img src=&quot;https://farm8.staticflickr.com/7013/13847990574_90df3ecdb9_c.jpg&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;figure&gt;
	&lt;a href=&quot;https://farm8.staticflickr.com/7335/13845751963_889abc4ec4_c.jpg&quot;&gt;&lt;img src=&quot;https://farm8.staticflickr.com/7335/13845751963_889abc4ec4_b.jpg&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;figure&gt;
	&lt;a href=&quot;https://farm8.staticflickr.com/7390/13823487753_fe6fb46892_b.jpg&quot;&gt;&lt;img src=&quot;https://farm8.staticflickr.com/7390/13823487753_fe6fb46892_b.jpg&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;figure&gt;
	&lt;a href=&quot;https://farm8.staticflickr.com/7372/13822215404_9d59c6839b_b.jpg&quot;&gt;&lt;img src=&quot;https://farm8.staticflickr.com/7372/13822215404_9d59c6839b_b.jpg&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;在室外疯了一天后，终于可以躲起来展示不为人知的赌棍的一面了。&lt;/p&gt;
&lt;figure&gt;
	&lt;a href=&quot;https://farm4.staticflickr.com/3729/13823546083_f467b7be38_b.jpg&quot;&gt;&lt;img src=&quot;https://farm4.staticflickr.com/3729/13823546083_f467b7be38_b.jpg&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;第二天早晨天气还是很好的，由于太累加上太兴奋（其实我极度怀疑是昨天的狂犬疫苗的副作用）。第二天的行程本来排得还是很满的，但是因为下午下起了下雨，所以下午就呆在住的地方了，这样以来活动就只剩下爬上五老峰了。说是爬山，其实我们现在已经在海拔1050以上了，最高的地方也才海拔1300+，所以我们相当于来庐山爬了个紫金山。从提升的海拔来讲是这样，但是沿途的风景还是大不一样的。庐山上远看只有两种情况，晴天，有点朦胧，雨天，非常朦胧。我们爬上五老峰的时候遇到的就是不那么晴朗的天气，所以一切都蒙蒙的，连照片都是蒙蒙的。咦~~害怕和那个小黑人一样掉下去啊，只能借妹纸的肩膀一用（逃~&lt;/p&gt;
&lt;figure&gt;
	&lt;a href=&quot;https://farm8.staticflickr.com/7206/13822410654_58b2672dd9_b.jpg&quot;&gt;&lt;img src=&quot;https://farm8.staticflickr.com/7206/13822410654_58b2672dd9_b.jpg&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;我是怕成为掉下去的小黑人的，还是妹纸们比较勇敢。&lt;/p&gt;
&lt;figure&gt;
	&lt;a href=&quot;https://farm8.staticflickr.com/7227/13822564284_9e0cdfecd0_b.jpg&quot;&gt;&lt;img src=&quot;https://farm8.staticflickr.com/7227/13822564284_9e0cdfecd0_b.jpg&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;
&lt;figure&gt;
	&lt;a href=&quot;https://farm8.staticflickr.com/7080/13822187723_c0518426c3_b.jpg&quot;&gt;&lt;img src=&quot;https://farm8.staticflickr.com/7080/13822187723_c0518426c3_b.jpg&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;
&lt;p&gt;上山途中感觉自己『老』了，一年没怎么运动，真的是爬不动了，看来回家要把晨跑提上日程了。&lt;/p&gt;

&lt;p&gt;往回走的时候经过别墅群，实在太累了也就没有进去看。还有永远只放一部电影的电影院。&lt;/p&gt;
&lt;figure&gt;
	&lt;a href=&quot;https://farm3.staticflickr.com/2888/13822261185_9d189f09fa_b.jpg&quot;&gt;&lt;img src=&quot;https://farm3.staticflickr.com/2888/13822261185_9d189f09fa_b.jpg&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;
&lt;figure&gt;
	&lt;a href=&quot;https://farm3.staticflickr.com/2868/13822313973_904bb8d466_b.jpg&quot;&gt;&lt;img src=&quot;https://farm3.staticflickr.com/2868/13822313973_904bb8d466_b.jpg&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;正好下午下雨，加上真的累到不行，所以就不出门了。等到准备离开的时候雨越下越大。在下山的盘上公路上能见度只有几米，如果说上来的时候是把命交给师傅，下去的话就算是把命交给天了，到了山下还在下雨。&lt;/p&gt;
&lt;figure&gt;
	&lt;a href=&quot;https://farm8.staticflickr.com/7064/13822647064_8c66d892c9_b.jpg&quot;&gt;&lt;img src=&quot;https://farm8.staticflickr.com/7064/13822647064_8c66d892c9_b.jpg&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;到了九江市区，凯哥哥请我们搓了一顿，此趟旅行算是完整了。我和凯哥哥都饿疯了，所以去商场取东西的时候居然忘记把买的特产从寄存柜中取出来，算是挥一挥手不带走一片云彩了。我们只能在照片上回忆一下那袋子东西的存在了，丫手上拎着的就是。&lt;/p&gt;
&lt;figure&gt;
	&lt;a href=&quot;https://farm8.staticflickr.com/7453/13822652384_c451817936_b.jpg&quot;&gt;&lt;img src=&quot;https://farm8.staticflickr.com/7453/13822652384_c451817936_b.jpg&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;和小伙伴们在一起还是很开心的，虽然感到自己又『老』又『残』的，还是期待下一站，更多图片可以移步&lt;a href=&quot;https://www.flickr.com/photos/hatmatrix&quot;&gt;flickr&lt;/a&gt;。&lt;/p&gt;


  &lt;p&gt;&lt;a href=&quot;/cn/%E7%94%9F%E6%B4%BB/lu_mountain/&quot;&gt;老残游记&lt;/a&gt; was originally published by HatMatrix at &lt;a href=&quot;&quot;&gt;HatMatrix&lt;/a&gt; on April 14, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[The Music King]]></title>
  <link rel="alternate" type="text/html" href="/cn/r/the-music-king/"/>
  <id>/cn/r/the-music-king</id>
  <published>2013-11-16T00:00:00+00:00</published>
  <updated>2013-11-16T00:00:00+00:00</updated>
  <author>
    <name>HatMatrix</name>
    <uri></uri>
    <email>hatmatrix42@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;快收工的时候刷了下微博看到了有人很无聊地去统计了汪峰老师（没有黑他的意思，其实人家音乐还是很有力量的好吧）歌词的词频率。于是我想这得多有(wu)趣(liao)啊，于是就决定自己也统计下。于是的于是，我放弃了看TBBT的时间来给统计下汪峰老师的歌词。&lt;/p&gt;

&lt;p&gt;要想统计就得有歌词啊，一个个找也不是懒人的风格，于是想到了&lt;a href=&quot;http://www.xiami.com/&quot;&gt;虾米&lt;/a&gt;上是有歌词的，去抓下来就好了嘛，其实也很简单，把网页抓下来解析一下。以前这活都是给Pyhon干的，今天想想用R尝试下吧。R解析HTML应该可以用XML包，但是因为以前都是使用Python来解析HTML,所有XML包压根就没有用过，于是决定自己写正则表达式来完成吧。&lt;/p&gt;

&lt;h1 id=&quot;section&quot;&gt;抓取歌词&lt;/h1&gt;
&lt;p&gt;汪峰在虾米上的ID是887，使用&lt;code&gt;http://www.xiami.com/artist/album/id/887/d//p//page/1&lt;/code&gt;的网址可以直接查看其专辑。&lt;/p&gt;

&lt;p&gt;我们首先获得其专辑的信息，这里主要是名字和专辑的链接。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;artistSearch &amp;lt;- c(&amp;quot;http://www.xiami.com/artist/album/id/887/d//p//page/1&amp;quot;,
                  &amp;quot;http://www.xiami.com/artist/album/id/887/d//p//page/2&amp;quot;)
text &amp;lt;- getURL(artistSearch)
m &amp;lt;- gregexpr(pattern=&amp;quot;&amp;lt;p class=\&amp;quot;name\&amp;quot;&amp;gt;.*&amp;lt;strong&amp;gt;&amp;quot;,text=text,perl=TRUE)
album &amp;lt;- regmatches(x=text,m=m)

#取得专辑的名字
getName &amp;lt;- function(text){
m=gregexpr(pattern=&amp;quot;(?&amp;lt;=title=\&amp;quot;).*(?=\&amp;quot;)&amp;quot;,text=text,perl=TRUE) #需要使用正则的零宽度断言
return(regmatches(x=text,m=m))
}

#取得专辑的链接
getLink &amp;lt;- function(text){
m=gregexpr(pattern=&amp;quot;(?&amp;lt;=href=\&amp;quot;).*[0-9](?=\&amp;quot;)&amp;quot;,text=text,perl=TRUE) #需要使用正则的零宽度断言
return(regmatches(x=text,m=m))
}

#获得专辑的名字和链接
albumDetails &amp;lt;- data.frame(name=unname(unlist(sapply(X=ablum,FUN=getName,simplify=&amp;quot;vector&amp;quot;))),
                          link=unname(unlist(sapply(X=ablum,FUN=getLink,simplify=&amp;quot;vector&amp;quot;))))

&amp;gt; ablumDetial
                       name              link
					   1                  生来彷徨  /album/784338853
					   2                  一起摇摆  /album/580530673
					   3    汪峰2011生无所求演唱会 /album/2075241743
					   4                  生无所求     /album/478379
					   5              像梦一样自由     /album/432313
					   6            信仰在空中飘扬     /album/337989
					   7                  勇敢的心       /album/4423
					   8                怒放的生命       /album/4424
					   9  Live In Beijing 飞得更高       /album/4425
					   10                   笑着哭       /album/4426
					   11       爱是一颗幸福的子弹       /album/4427
					   12  十七岁的单车 电影原声带     /album/168383
					   13             花火(台湾版)     /album/374017
					   14                     花火       /album/4428&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;以上获得了专辑的名字和专辑的链接地址，接下来要做的就是去这个专辑中找到这些歌曲然后找到这些歌曲的歌词就可以了。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;#获取专辑中歌曲信息
getSongDetails  &amp;lt;- function(ablumDetails){
text &amp;lt;- getURL(url=paste0(&amp;quot;http://www.xiami.com&amp;quot;,ablumDetails$link))
m=gregexpr(pattern=&amp;quot;(?&amp;lt;=&amp;lt;td class=\&amp;quot;song_name\&amp;quot;&amp;gt;).*?(?=&amp;lt;/a&amp;gt;)&amp;quot;,text=text,perl=TRUE) #需要使用正则的零宽度断言 非贪婪
songs &amp;lt;- regmatches(x=text,m=m)
#获取歌曲名字
getName &amp;lt;- function(text){
m=gregexpr(pattern=&amp;quot;(?&amp;lt;=title=\&amp;quot;\&amp;quot;&amp;gt;).*&amp;quot;,text=text,perl=TRUE) #需要使用正则的零宽度断言,
return(regmatches(x=text,m=m))
}
#歌曲链接名字
getLink &amp;lt;- function(text){
m=gregexpr(pattern=&amp;quot;(?&amp;lt;=&amp;lt;a href=\&amp;quot;).*[0-9](?=\&amp;quot;)&amp;quot;,text=text,perl=TRUE) #需要使用正则的零宽度断言
return(regmatches(x=text,m=m))
}
songDetails &amp;lt;-  data.frame(name=unname(unlist(sapply(X=songs,FUN=getName,simplify=&amp;quot;vector&amp;quot;))),
link=unname(unlist(sapply(X=songs,FUN=getLink,simplify=&amp;quot;vector&amp;quot;))))
return(songDetial)
}

#获得歌曲的信息
songDetail &amp;lt;- getSongDetail(ablumDetial)


#获取歌词
getLrc &amp;lt;- function(songDetail){
text &amp;lt;- getURL(url=paste0(&amp;quot;http://www.xiami.com/&amp;quot;,songDetail$link))
m=gregexpr(pattern=&amp;quot;(?&amp;lt;=&amp;lt;div class=\&amp;quot;lrc_main\&amp;quot;&amp;gt;)[^..]*?(?=&amp;lt;.div&amp;gt;)&amp;quot;,text=text,perl=TRUE) #需要使用正则的零宽度断言 非贪婪 注意空行的匹配
lrc &amp;lt;- regmatches(x=text,m=m)
lrc &amp;lt;- gsub(pattern=&amp;quot;(\\s)&amp;quot;,replacement=&amp;quot;&amp;quot;,x=lrc)
lrc &amp;lt;- gsub(pattern=&amp;quot;&amp;lt;br/&amp;gt;&amp;quot;,replacement=&amp;quot;\n&amp;quot;,x=lrc)
return(lrc)
}

Lrc &amp;lt;- getLrc(songDetail)

#把歌词的信息加入
songDetail$Lrc &amp;lt;- Lrc

&amp;gt; songDetail[1,]
      name             link
	  1 生来彷徨 /song/1772331683
	rc
																																																																																																																																																																																																 1 每天走在疯狂逐梦的大街上\n我们精神褴褛却又毫无倦意\n徘徊着寻找着那虚空的欢愉\n奔波着抗争着那无常的命运\n\n朋友啊这生活会把你的心伤烂\n可它从来就不会有一丝怜悯\n再也别象个傻瓜一样的哭了\n因为象我们这样的人生来彷徨\n\n传真机到炼钢厂有一万光年\n那只是我们失梦之路的起点\n妈妈你善良的孩子还没放弃\n他想在今夜的街上爱到死去\n\n朋友啊这世界会将你的梦破败\n而它从来就不会有一丝同情\n再也别象个疯子一样的拼了\n因为象我们这样的人生来彷徨\n\n路上散落着花朵般受伤的英雄\n如同我们一起挣扎着的那些片段\n明天我们是否活着却依然不在\n明天我们是否存在却迷惘依然\n\n朋友啊这生活会把你的骨折断\n而它从来就只是在袖手旁观\n不如象一块石头一样的滚吧\n因为象我们这样的人生来彷徨\n\n朋友啊这世界会将你的爱破灭\n而它从来就不会给一次拯救\n不如让我们一起放任自流吧\n反正象我们这样的人生来彷徨&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;section-1&quot;&gt;分词&lt;/h1&gt;

&lt;p&gt;接下来就是统计词频率了,分词使用分词包&lt;a href=&quot;http://jliblog.com/app/rwordseg&quot;&gt;Rwordseg&lt;/a&gt;。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;library(Rwordseg)
segWords &amp;lt;- segmentCN(strwords=songDetail$Lrc,nature=TRUE)

segWords &amp;lt;- unlist(segWords)
stopwords &amp;lt;- read.table(&amp;quot;./Document/Temp/stopwords.txt&amp;quot;)
segWords &amp;lt;- segWords[!segWords%in%c(&amp;quot;的&amp;quot;,&amp;quot;是&amp;quot;,&amp;quot;在&amp;quot;,&amp;quot;也&amp;quot;,&amp;quot;得&amp;quot;,&amp;quot;地&amp;quot;,&amp;quot;制作人&amp;quot;,&amp;quot;录音师&amp;quot;)]

#去掉ul
segWords &amp;lt;- segWords[!names(segWords)==&amp;quot;ul&amp;quot;]
#去掉uj
segWords &amp;lt;- segWords[!names(segWords)==&amp;quot;uj&amp;quot;]


#统计动词
verbWords &amp;lt;- segWords[names(segWords)==&amp;quot;v&amp;quot;]
x &amp;lt;- as.data.frame(table(verbWords))
x[order(x$Freq,decreasing=TRUE),][1:30,]

#统计名词
nounWords &amp;lt;- segWords[names(segWords)==&amp;quot;n&amp;quot;]
x &amp;lt;- as.data.frame(table(nounWords))
x[order(x$Freq,decreasing=TRUE),][1:30,]

#统计形容词/副词语
aWords &amp;lt;- segWords[names(segWords)==&amp;quot;a&amp;quot;]
x &amp;lt;- as.data.frame(table(aWords))
x[order(x$Freq,decreasing=TRUE),][1:30,]

#统计量词
mWords &amp;lt;- segWords[names(segWords)==&amp;quot;m&amp;quot;]
x &amp;lt;- as.data.frame(table(mWords))
x[order(x$Freq,decreasing=TRUE),][1:30,]&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;section-2&quot;&gt;结果&lt;/h1&gt;
&lt;p&gt;结果是基本上就是下面这样的&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;#动词的统计
   verbWords Freq
   823        像  227
   900        有  191
   1          爱  173
   340        会  156
   515      没有  146
   618        让  135
   950      知道  120
   162        到  113
   868        要  110
   149        带   97
   426        可   94
   816        想   80
   493      录音   76
   447        来   73
   613        去   73
   166      等待   71
   341        混   67
   120      处理   64
   928        找   57
   428      可以   52
   538        能   51
   433      哭泣   49
   432        哭   48
   785        无   48
   986        走   47
   913      再见   44
   696        说   41
   407      觉得   39
   252      感到   38
   585      破碎   38


#名词的统计
nounWords Freq
574      生命  125
177      感觉  118
526        人  106
785        音   94
692        象   88
421        梦   85
203    工作室   78
408      妈妈   75
843      助理   64
711        心   53
305      键盘   51
293      吉他   50
589      世界   50
164        风   45
148      方向   40
627      天空   39
528      人们   37
227      孩子   36
1        爱情   33
804        雨   33
784      意义   32
386      灵魂   29
582      时光   28
783      意思   28
92       大地   26
201      工程   26
397    录音室   26
467      朋友   26
396    录音棚   24
767      阳光   24

#形容词和副词
 aWords Freq
 63    孤独   65
 144   美丽   42
 268   自由   37
 151   迷惘   32
 178   亲爱   32
 51    疯狂   28
 90    坚强   27
 12    悲伤   24
 22    灿烂   24
 236   幸福   21
 85    辉煌   17
 206     碎   16
 246   勇敢   16
 88    寂寞   15
 48    繁华   14
 102     紧   14
 150   迷茫   14
 14    蹩脚   13
 42      大   13
 56      高   13
 111     倦   13
 113   绝望   13
 125   快乐   13
 31    炽热   12
 132     乐   12
 251     远   12
 257   真实   12
 26      长   11
 70      好   11
 172   平静   11&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;最后肯定要总结下，要不然就文不对题了。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;其实汪峰歌还是很好的，就算不是Music King，可人家在章子怡心中就是King啊。&lt;/li&gt;
  &lt;li&gt;章子怡很漂亮的，我基本不黑漂亮的女孩。&lt;/li&gt;
  &lt;li&gt;那些把Music King翻译成“音帝”的人，你东西掉了……&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;嗯，差不多就这样。PS：这代码的显示太差劲了，等这个周末以后得把版面改改了。&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;/cn/r/the-music-king/&quot;&gt;The Music King&lt;/a&gt; was originally published by HatMatrix at &lt;a href=&quot;&quot;&gt;HatMatrix&lt;/a&gt; on November 16, 2013.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[MySQL和MS SQL Server的一些区别]]></title>
  <link rel="alternate" type="text/html" href="/cn/%E6%95%B0%E6%8D%AE%E5%BA%93/difference-between-mysql-and-ms-sql/"/>
  <id>/cn/%E6%95%B0%E6%8D%AE%E5%BA%93/difference-between-mysql-and-ms-sql</id>
  <published>2013-11-01T00:00:00+00:00</published>
  <updated>2013-11-01T00:00:00+00:00</updated>
  <author>
    <name>HatMatrix</name>
    <uri></uri>
    <email>hatmatrix42@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;以前也用过MySQL的数据库，但是主要使用的都是查询，几乎没有使用到触发器、存储过程和函数等功能，最近需要从MS SQL Server迁移到MySQL，在使用过程中发现了一些区别，记录下来。关于查询语句的区别就不说了，主要说说触发器和存储过程等等的区别。&lt;/p&gt;

&lt;h1 id=&quot;section&quot;&gt;触发器&lt;/h1&gt;
&lt;p&gt;在MySQL中触发器的语法和MS SQL有点区别，下面是一个实例&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;DELIMITER $$
CREATE
DEFINER=`root`@`localhost`
TRIGGER `test`.`t_afterinsert_on_tab1`
AFTER INSERT ON `test`.`test`
FOR EACH ROW
BEGIN
sql语句；
END$$&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;和MS SQL不同的是MySQL的触发器类型有六种，分别是&lt;code&gt;AFTER/BEFORE&lt;/code&gt;和&lt;code&gt;INSERT/UPDATE/DELETE&lt;/code&gt;之间的组合。而MS SQL的触发器是&lt;code&gt;INSERT&lt;/code&gt;,&lt;code&gt;UPDATE&lt;/code&gt;,&lt;code&gt;DELETE&lt;/code&gt;以及&lt;code&gt;INSTEAD OF&lt;/code&gt;四种，其中前三种是之后触发，最后一种是之前触发。如果使用习惯了MS SQL的话，在写触发器中的SQL语句就会遇到一个小小的坑。比如有一张表格有x和y两列，需要一个触发器判断x大于0就插入x否则插入-x。如果习惯了M$ SQL会这样写：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;DELIMITER $$
CREATE TRIGGER	&amp;#39;test&amp;#39;.&amp;#39;error_trigger&amp;#39;
BEFORE INSTER ON `test`.`test`
FOR EACH　ROW
BEGIN
if new.x&amp;lt;0 then
inster into test values(-new.x,new.y);
else
inster into test values(new.x,new.y);
end if;
END$$
DELIMITER;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;但是这样话是无法运行的，因为这样已经相当于循环插入了，正确的做法是:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;DELIMITER $$
CREATE TRIGGER	&amp;#39;test&amp;#39;.&amp;#39;error_trigger&amp;#39;
BEFORE INSTER ON `test`.`test`
FOR EACH　ROW
BEGIN
if new.x&amp;lt;0 then
set new.x=-new.x
else
set new.x=new.x #也可以不要这句
end if;
END$$
DELIMITER ;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;在写触发器的时候还要注意的就是&lt;code&gt;new&lt;/code&gt;和&lt;code&gt;old&lt;/code&gt;的使用，这在MS SQL中是没有的。&lt;code&gt;new&lt;/code&gt;加上点(.)加上列名就可以取出相应的列，&lt;code&gt;old&lt;/code&gt;在删除的时候会用得比较多点。而在MS SQL中是需要使用&lt;code&gt;select&lt;/code&gt;来取出的。&lt;/p&gt;

&lt;h1 id=&quot;section-1&quot;&gt;存储过程&lt;/h1&gt;

&lt;p&gt;存储过程没有很大的区别，发现有几点。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;在MySQL中定义变量是不需要使用&lt;code&gt;@&lt;/code&gt;符号的。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;声明参数的格式为&lt;code&gt;输入（IN）变量还是输出（OUT）变量  变量名 变量类型&lt;/code&gt;，比如 &lt;code&gt;IN par_name INT&lt;/code&gt;这种就表示是INT型的名字韦par_name的输入型变量。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;在给变量赋值的时候和MS SQL也是有点区别的，在SQL中可以&lt;code&gt;selct  @a=a,@b=b from test&lt;/code&gt;,其中&lt;code&gt;@a&lt;/code&gt;、&lt;code&gt;@b&lt;/code&gt;为声明的变量,而在MySQL中只能&lt;code&gt;selet a,b into aa,bb  form test&lt;/code&gt;,其中&lt;code&gt;aa&lt;/code&gt;和&lt;code&gt;bb&lt;/code&gt;为声明的变量。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;ERROR 1093错误经常发生在修改A表的时候使用了A表, 比如 A表中x，y列那么：&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;UPDATE A
set A.x=new.x
where x in select x from A as t_xxxx;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;这样是会报错的，解决方案为&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;UPDATE A
set A.x=new.x
where x in
select x from(select x from A as t_xxxx)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;因为对其原理不明白，个人猜想，这可能和SQL语句的内部执行顺序是有关系的，必须在更新之前查找出数据存入临时表中以备用。&lt;/p&gt;

&lt;h1 id=&quot;section-2&quot;&gt;函数&lt;/h1&gt;
&lt;p&gt;差别不是很大，注意的也就是参数的声明。&lt;/p&gt;

&lt;h1 id=&quot;section-3&quot;&gt;事件调度&lt;/h1&gt;
&lt;p&gt;MySQL中的EVENT功能是在5.1版本以后才有的，MS SQL也是有的，但是在08版的Express版本（用不起正版的完整版）是不支持调度的,所以只能苦逼的在外部写一个程序调用。创建在MySQL中创建EVENT的过程如下，具体的语法可以查看手册。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;show variables like &amp;#39;event_scheduler&amp;#39;;  #查看是否开启定时器  
set global event_scheduler=1;  #开启定时器 

DELIMITER $$
CREATE EVENT IF NOT EXISTS EVENT_CheckOnLine
ON SCHEDULE EVERY 30 SECOND
ON COMPLETION PRESERVE
DO BEGIN
call checkOnline(30);
END$$
DELIMITER ;

SELECT * FROM information_schema.EVENTS;   #查看事件的调用情况&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;section-4&quot;&gt;其他需要注意的&lt;/h1&gt;
&lt;p&gt;在使用的过程还发现了其他一些可能导致的错误：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;ERROR 1175的解决方案是&lt;code&gt;SET SQL_SAFE_UPDATES=0&lt;/code&gt;,原因是当要执行的SQL语句是进行批量更新或者删除的时候就会提示这个错误，这是一个保护机制，去掉就是了。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;workbench中编辑数据的时候（估计直接编辑数据也就在测试阶段使用），如果该表没有设置主键的时候是不能直接编辑数据的。吐槽下workbench的可视化编辑器真的&lt;code&gt;print('很'*10000)&lt;/code&gt;难用的。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;自增加(&lt;code&gt;AUTO_INCREMENT&lt;/code&gt;)必须是主键的一部分，并且一张表只能有一个&lt;code&gt;AUTO_INCREMENT&lt;/code&gt;属性,其可以是任何整数类型的数据。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;就目前的使用来说，暂时就发现这些差异，随着使用肯定会有更加多的问题，到时候再补充。下次去了解下&lt;a href=&quot;http://www.postgresql.org/&quot;&gt;Postgresql&lt;/a&gt;这个号称 &lt;strong&gt;“The world’s most advanced open source database”&lt;/strong&gt; 的数据库，这个数据库到目前为止也只是使用过她的查询语句。&lt;/p&gt;


  &lt;p&gt;&lt;a href=&quot;/cn/%E6%95%B0%E6%8D%AE%E5%BA%93/difference-between-mysql-and-ms-sql/&quot;&gt;MySQL和MS SQL Server的一些区别&lt;/a&gt; was originally published by HatMatrix at &lt;a href=&quot;&quot;&gt;HatMatrix&lt;/a&gt; on November 01, 2013.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[每周记录 20131028]]></title>
  <link rel="alternate" type="text/html" href="/cn/%E7%94%9F%E6%B4%BB/mei-zhou-ji-lu-20131028/"/>
  <id>/cn/%E7%94%9F%E6%B4%BB/mei-zhou-ji-lu-20131028</id>
  <published>2013-10-29T00:00:00+00:00</published>
  <updated>2013-10-29T00:00:00+00:00</updated>
  <author>
    <name>HatMatrix</name>
    <uri></uri>
    <email>hatmatrix42@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;2013年很快就要进入第300天了，略伤感。在浪费了小半年以后，开始重新做人，立志成为一个就算恶趣味也要有趣的人。不过话说回来，自己认为的有趣别人会觉得无趣也不一定，有人还觉得王小波没意思呢。&lt;/p&gt;

&lt;p&gt;这300天来，大多数时间花在纠结上，也许人最怕的是纠结，纠结的生，纠结的死，纠结的生死，纠结到死。所以啊，这纠结的大半年就头发长了点，似乎什么都没有长的感觉。不对，好像拖延症更加严重了，什么事情不到最后期限是绝对不会做完的。就说打算有计划地写博客这件事也因为拖延症的发作而拖延了。&lt;/p&gt;

&lt;p&gt;本来这里是所谓的技术博客，现在先用来吐吐槽。本周的槽点有：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;正则表达式绝对是一个有助于提高幸福指数的东西。某个小孩子由于失误在写MySQL的查询语句的时候少写了反引号，然后就悲剧了，接近100句的查询语句要一句一句地改。这时候就该祭出正则表达式这个杀器了，当然还要感谢&lt;a href=&quot;http://www.sublimetext.com/2&quot;&gt;sublime text2&lt;/a&gt;。sublime使用的正则式引擎是&lt;a href=&quot;http://www.boost.org/doc/libs/1_34_0/libs/regex/doc/index.html&quot;&gt;boost&lt;/a&gt;，在向后引用的时候使用的是&lt;code&gt;$&lt;/code&gt;符号，别的有没有区别就没有细看了，有时间看下。顺便吐槽下M$的VS。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Excel什么真的很讨厌，读取什么真心麻烦。对面的姐姐让帮忙按固定格式生成报表，给的居然是Excel表格。好吧，我也不懂VBA，只能用R给写了个小脚本，顺利完成任务，我R威武，有xlsx包相助。貌似又吐槽了下M$。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;在回家的路上对面走来一个看起来及其熟悉的人，于是瞬间呆掉，好在意识中已经深深地打上了不可能再见到的印记，只是停了几步，怔怔地望了几眼，但愿没有被发现，赶紧逃离现场，安抚下狂跳的小心脏，然后吃碗面压压惊。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;听一群高智力（不是智商）的人吹牛比还是很享受的，虽然大家会文理攻击，但是在黑芮成刚这件事上还是很一致的。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;我只是喜欢日本和德国的制造业，顺便看不上中医，其实我还是很爱国的，真的不骗你。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;大数定理的证明一如既往的看不懂，又纠结了。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;尝试了下番茄工作法，不喜欢这个名字，因为我不喜欢吃番茄。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;刚刚被坑了一把，jekyll默认的markdown解析器对中文无序列表居然无法解析，&lt;a href=&quot;http://nepshi.com/2012-10-08/chinese-characters-in-jekyll/&quot;&gt;按照这个办法解决了&lt;/a&gt;，真所谓在计算机的世界里中文处处埋下坑。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;完毕，本该礼拜天写的，拜拖延症所赐，又拖了下。&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;/cn/%E7%94%9F%E6%B4%BB/mei-zhou-ji-lu-20131028/&quot;&gt;每周记录 20131028&lt;/a&gt; was originally published by HatMatrix at &lt;a href=&quot;&quot;&gt;HatMatrix&lt;/a&gt; on October 29, 2013.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[R中使用正则表达式（1）]]></title>
  <link rel="alternate" type="text/html" href="/cn/r/regular-expression-in-r-1/"/>
  <id>/cn/r/regular-expression-in-r-1</id>
  <published>2013-08-12T00:00:00+00:00</published>
  <updated>2013-08-12T00:00:00+00:00</updated>
  <author>
    <name>HatMatrix</name>
    <uri></uri>
    <email>hatmatrix42@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;正则表达式对我来说一直是一个不明觉厉的东西，但是由于在处理文本的时候是必须使用的，所以稍微明一下总是好的。由于平时使用R比较多，所以就以在R中使用正则表达式做一个笔记，这样以后忘记了的时候还可以查看。&lt;/p&gt;

&lt;p&gt;以下主要参考的是Ben Forta的《正则表达式必知必会》的中文版，其他的正则表达式的教材大多很厚，到现在为止我就发现这本比较靠谱，希望大家有更加好的可以给我推荐，谢谢。&lt;/p&gt;

&lt;h1 id=&quot;r&quot;&gt;R中怎么使用正则表达式&lt;/h1&gt;
&lt;p&gt;在R中很多涉及到字符处理的函数都是可以使用正则表达式的，我们就以最正常字符处理函数为例：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;regexec(pattern, text, ignore.case = FALSE, fixed = FALSE, useBytes = FALSE)
# pattern就是我们要写的正则表达式 text是需要处理的文本
# ignore.case表示是不是忽略大小写
# fixed为FALSE则使用正则表达式匹配，否则就使用精确匹配，也就是把&amp;#39;.&amp;#39;之类的字符当作实义字符
# useBytes 暂时没有使用过&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;接下来都是在grep上使用正则表达式，其他的都是差不多的。&lt;/p&gt;

&lt;h1 id=&quot;r-1&quot;&gt;R中使用正则表达式实战&lt;/h1&gt;
&lt;p&gt;## 匹配纯文本&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;x &amp;lt;- &amp;quot;Hello ,my name is Ben.Please visit my website&amp;quot;
m &amp;lt;- regexec(pattern = &amp;quot;Ben&amp;quot;, text = x)
regmatches(x, m)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [[1]]
## [1] &amp;quot;Ben&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;# 全局匹配
m &amp;lt;- regexec(pattern = &amp;quot;my&amp;quot;, text = x)  #注意只是给出第一个匹配的，要全局匹配需要使用gregexpr
regmatches(x, m)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [[1]]
## [1] &amp;quot;my&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;m &amp;lt;- gregexpr(pattern = &amp;quot;my&amp;quot;, text = x)
regmatches(x, m)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [[1]]
## [1] &amp;quot;my&amp;quot; &amp;quot;my&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;# 不考虑字母大小写
m &amp;lt;- gregexpr(pattern = &amp;quot;My&amp;quot;, text = x, ignore.case = TRUE)
regmatches(x, m)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [[1]]
## [1] &amp;quot;my&amp;quot; &amp;quot;my&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;section&quot;&gt;匹配任意字符&lt;/h2&gt;
&lt;p&gt;正则表达式中使用点(.)来匹配一个 &lt;strong&gt;一个或者多个&lt;/strong&gt; 字符，可以匹配任意单个字符串，包括点(.)本身。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;x &amp;lt;- c(&amp;quot;sales.xls&amp;quot;, &amp;quot;orders3.xls&amp;quot;, &amp;quot;sales2.xls&amp;quot;, &amp;quot;sales3.xls&amp;quot;, &amp;quot;sales.4.xls&amp;quot;, 
    &amp;quot;apac1.xls&amp;quot;, &amp;quot;na1.xls&amp;quot;, &amp;quot;na2.xls&amp;quot;, &amp;quot;sa1.xls&amp;quot;)
grep(pattern = &amp;quot;sales.&amp;quot;, x = x, value = TRUE)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] &amp;quot;sales.xls&amp;quot;   &amp;quot;sales2.xls&amp;quot;  &amp;quot;sales3.xls&amp;quot;  &amp;quot;sales.4.xls&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;# 点(.)可以连着使用也可以分开使用
grep(pattern = &amp;quot;.a.&amp;quot;, x = x, value = TRUE)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] &amp;quot;sales.xls&amp;quot;   &amp;quot;sales2.xls&amp;quot;  &amp;quot;sales3.xls&amp;quot;  &amp;quot;sales.4.xls&amp;quot; &amp;quot;apac1.xls&amp;quot;  
## [6] &amp;quot;na1.xls&amp;quot;     &amp;quot;na2.xls&amp;quot;     &amp;quot;sa1.xls&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;grep(pattern = &amp;quot;.a..&amp;quot;, x = x, value = TRUE)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] &amp;quot;sales.xls&amp;quot;   &amp;quot;sales2.xls&amp;quot;  &amp;quot;sales3.xls&amp;quot;  &amp;quot;sales.4.xls&amp;quot; &amp;quot;apac1.xls&amp;quot;  
## [6] &amp;quot;na1.xls&amp;quot;     &amp;quot;na2.xls&amp;quot;     &amp;quot;sa1.xls&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;section-1&quot;&gt;匹配特殊字符&lt;/h2&gt;
&lt;p&gt;匹配特殊字符需要进行转义，转义一般使用\，但是在R中我们使用\来表示，这个是需要注意的。还有一个需要注意的就是如果比需要表示\也是需要转义的。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;x &amp;lt;- c(&amp;quot;sales.xls&amp;quot;, &amp;quot;orders3.xls&amp;quot;, &amp;quot;sales2.xls&amp;quot;, &amp;quot;sales3.xls&amp;quot;, &amp;quot;sales.4.xls&amp;quot;, 
    &amp;quot;apac1.xls&amp;quot;, &amp;quot;na1.xls&amp;quot;, &amp;quot;na2.xls&amp;quot;, &amp;quot;sa1.xls&amp;quot;)
grep(pattern = &amp;quot;.a.\\.&amp;quot;, x = x, value = TRUE)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] &amp;quot;na1.xls&amp;quot; &amp;quot;na2.xls&amp;quot; &amp;quot;sa1.xls&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;x &amp;lt;- c(&amp;quot;a\\d&amp;quot;, &amp;quot;acd&amp;quot;, &amp;quot;dsa&amp;quot;)
grep(pattern = &amp;quot;a\\\\&amp;quot;, x = x, value = TRUE)  #需要注意在R中，\本身是要用\\表示的&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] &amp;quot;a\\d&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;section-2&quot;&gt;匹配一组字符&lt;/h2&gt;
&lt;p&gt;我们需要的几个字符中的任意一个&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;x &amp;lt;- c(&amp;quot;sales.xls&amp;quot;, &amp;quot;orders3.xls&amp;quot;, &amp;quot;sales2.xls&amp;quot;, &amp;quot;sales3.xls&amp;quot;, &amp;quot;sales.4.xls&amp;quot;, 
    &amp;quot;apac1.xls&amp;quot;, &amp;quot;na1.xls&amp;quot;, &amp;quot;na2.xls&amp;quot;, &amp;quot;sa1.xls&amp;quot;)
# 我们需要sa开是和na开始的
grep(pattern = &amp;quot;[sn]a.\\.xls&amp;quot;, x = x, value = TRUE)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] &amp;quot;na1.xls&amp;quot; &amp;quot;na2.xls&amp;quot; &amp;quot;sa1.xls&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;text &amp;lt;- &amp;quot;The phrase regullar expression is often abbreciated as RegEx or regex&amp;quot;
m &amp;lt;- gregexpr(pattern = &amp;quot;[Rr]eg[Ee]x&amp;quot;, text = text)
regmatches(text, m)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [[1]]
## [1] &amp;quot;RegEx&amp;quot; &amp;quot;regex&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;section-3&quot;&gt;利用字符区间&lt;/h2&gt;
&lt;p&gt;使用集合的时候对于有规律的我们可以使用区间来表示&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;x &amp;lt;- c(&amp;quot;sales.xls&amp;quot;, &amp;quot;orders3.xls&amp;quot;, &amp;quot;sales2.xls&amp;quot;, &amp;quot;sales3.xls&amp;quot;, &amp;quot;sales.4.xls&amp;quot;, 
    &amp;quot;apac1.xls&amp;quot;, &amp;quot;na1.xls&amp;quot;, &amp;quot;na2.xls&amp;quot;, &amp;quot;sa1.xls&amp;quot;)
grep(pattern = &amp;quot;..[0123456789]\\.xls&amp;quot;, x = x, value = TRUE)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] &amp;quot;orders3.xls&amp;quot; &amp;quot;sales2.xls&amp;quot;  &amp;quot;sales3.xls&amp;quot;  &amp;quot;sales.4.xls&amp;quot; &amp;quot;apac1.xls&amp;quot;  
## [6] &amp;quot;na1.xls&amp;quot;     &amp;quot;na2.xls&amp;quot;     &amp;quot;sa1.xls&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;grep(pattern = &amp;quot;..[0-9]\\.xls&amp;quot;, x = x, value = TRUE)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] &amp;quot;orders3.xls&amp;quot; &amp;quot;sales2.xls&amp;quot;  &amp;quot;sales3.xls&amp;quot;  &amp;quot;sales.4.xls&amp;quot; &amp;quot;apac1.xls&amp;quot;  
## [6] &amp;quot;na1.xls&amp;quot;     &amp;quot;na2.xls&amp;quot;     &amp;quot;sa1.xls&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;grep(pattern = &amp;quot;..[0-2]\\.xls&amp;quot;, x = x, value = TRUE)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] &amp;quot;sales2.xls&amp;quot; &amp;quot;apac1.xls&amp;quot;  &amp;quot;na1.xls&amp;quot;    &amp;quot;na2.xls&amp;quot;    &amp;quot;sa1.xls&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;这里只要是开始和结尾是合法的ASCII字符都是可以的，不过常用的还是字符区间和数字区间。&lt;/p&gt;

&lt;h2 id=&quot;section-4&quot;&gt;取非匹配&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;x &amp;lt;- c(&amp;quot;sales.xls&amp;quot;, &amp;quot;orders3.xls&amp;quot;, &amp;quot;sales2.xls&amp;quot;, &amp;quot;sales3.xls&amp;quot;, &amp;quot;sales.4.xls&amp;quot;, 
    &amp;quot;apac1.xls&amp;quot;, &amp;quot;na1.xls&amp;quot;, &amp;quot;na2.xls&amp;quot;, &amp;quot;sa1.xls&amp;quot;, &amp;quot;sam.xls&amp;quot;)
grep(pattern = &amp;quot;..[^0123456789]\\.xls&amp;quot;, x = x, value = TRUE)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] &amp;quot;sales.xls&amp;quot; &amp;quot;sam.xls&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;grep(pattern = &amp;quot;[ns]a[^0-9]\\.xls&amp;quot;, x = x, value = TRUE)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] &amp;quot;sam.xls&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;section-5&quot;&gt;匹配空白字符&lt;/h2&gt;
&lt;p&gt;空白字符有换页符\f，换行符\n，回车符\r，制表符\t，垂直制表符\v。
在匹配的时候记得转义就好了&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;text &amp;lt;- &amp;quot;I am Justin\nHello   world\n&amp;quot;  #在justin和world之间换行了
m &amp;lt;- gregexpr(pattern = &amp;quot;\n.*&amp;quot;, text = text)
regmatches(text, m)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [[1]]
## [1] &amp;quot;\nHello   world\n&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;section-6&quot;&gt;匹配特定的字符类型&lt;/h2&gt;
&lt;p&gt;### 匹配数字
可以使用[0-9]来匹配数字，也可以使用\d来匹配数字使用\D来匹配非数字,但是在R中我们要使用\d和\D来替代&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;x &amp;lt;- c(&amp;quot;sales.xls&amp;quot;, &amp;quot;orders3.xls&amp;quot;, &amp;quot;sales2.xls&amp;quot;, &amp;quot;sales3.xls&amp;quot;, &amp;quot;sales.4.xls&amp;quot;, 
    &amp;quot;apac1.xls&amp;quot;, &amp;quot;na1.xls&amp;quot;, &amp;quot;na2.xls&amp;quot;, &amp;quot;sa1.xls&amp;quot;, &amp;quot;sam.xls&amp;quot;)
grep(pattern = &amp;quot;..\\d\\.xls&amp;quot;, x = x, value = TRUE)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] &amp;quot;orders3.xls&amp;quot; &amp;quot;sales2.xls&amp;quot;  &amp;quot;sales3.xls&amp;quot;  &amp;quot;sales.4.xls&amp;quot; &amp;quot;apac1.xls&amp;quot;  
## [6] &amp;quot;na1.xls&amp;quot;     &amp;quot;na2.xls&amp;quot;     &amp;quot;sa1.xls&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;grep(pattern = &amp;quot;..\\D\\.xls&amp;quot;, x = x, value = TRUE)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] &amp;quot;sales.xls&amp;quot; &amp;quot;sam.xls&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;section-7&quot;&gt;匹配字母和数字&lt;/h3&gt;
&lt;p&gt;匹配所有的字母和数字，用\w表示，等价于[0-9a-zA-Z]我们用\W表示非字母和数字。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;text &amp;lt;- &amp;quot;\n11213\nA1C2E3\n48075\nM184F2\n90046\nH1H2H2\n&amp;quot;
m &amp;lt;- gregexpr(pattern = &amp;quot;\\w\\d\\w\\d\\w\\d&amp;quot;, text = text)
regmatches(text, m)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [[1]]
## [1] &amp;quot;A1C2E3&amp;quot; &amp;quot;M184F2&amp;quot; &amp;quot;H1H2H2&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;section-8&quot;&gt;匹配空白字符&lt;/h3&gt;
&lt;p&gt;\s，包含我们上面提到的所有的空白字符
### 匹配十六进制和八进制数值
使用\x0后跟十六进制数，\0后面跟八进制数&lt;/p&gt;

&lt;h2 id=&quot;posix&quot;&gt;使用POSIX字符类&lt;/h2&gt;
&lt;p&gt;可以在R的帮助文档查看那些可以使用的&lt;/p&gt;

&lt;h2 id=&quot;section-9&quot;&gt;匹配一个或者多个字符&lt;/h2&gt;
&lt;p&gt;使用加号(“+”)来匹配一个或者多个字符&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;text &amp;lt;- &amp;quot;Send personal emain to ben@forta.com or spam@gmail.com&amp;quot;
m &amp;lt;- gregexpr(pattern = &amp;quot;\\w+@\\w+\\.\\w+&amp;quot;, text = text)
regmatches(text, m)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [[1]]
## [1] &amp;quot;ben@forta.com&amp;quot;  &amp;quot;spam@gmail.com&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;section-10&quot;&gt;匹配零个或者多个字符&lt;/h2&gt;
&lt;p&gt;使用星号(*)来匹配零个或者多个字符&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;text &amp;lt;- &amp;quot;Hello ben@forta.com is my email address&amp;quot;
m &amp;lt;- gregexpr(pattern = &amp;quot;\\w+[\\w.]*@\\w+\\.\\w+&amp;quot;, text = text)
regmatches(x = text, m = m)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [[1]]
## [1] &amp;quot;ben@forta.com&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;section-11&quot;&gt;匹配零个或者一个字符&lt;/h2&gt;
&lt;p&gt;使用问号(?)来匹配零个或者一个字符&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;text &amp;lt;- &amp;quot;The URL is http://www.forta.com/,to connec securely use https://www.forta.com/ instead&amp;quot;
m &amp;lt;- gregexpr(pattern = &amp;quot;https?://[\\w./]+&amp;quot;, text = text, perl = TRUE)  #注意perl参数的设置的结果的差异
regmatches(text, m)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [[1]]
## [1] &amp;quot;http://www.forta.com/&amp;quot;  &amp;quot;https://www.forta.com/&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;section-12&quot;&gt;重复精确的次数&lt;/h2&gt;
&lt;p&gt;用大括号({})中写上数字来表示重复的次数&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;text &amp;lt;- &amp;quot;&amp;lt;BOdy BGCOLOR=\&amp;quot;#336633\&amp;quot;,TEXT=\&amp;quot;#FFFFFF\&amp;quot;,MARGINWIDTH=\&amp;quot;0\&amp;quot;&amp;gt;&amp;quot;
m &amp;lt;- gregexpr(pattern = &amp;quot;[[:xdigit:]]{6}&amp;quot;, text = text)
regmatches(text, m)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [[1]]
## [1] &amp;quot;336633&amp;quot; &amp;quot;FFFFFF&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;section-13&quot;&gt;为重复设置一个区间&lt;/h2&gt;
&lt;p&gt;用大括号中写上范围({2,5})表示写重复的次数的范围&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;text &amp;lt;- &amp;quot;4/8/03\n10-6-2004\n2/2/2\n01-01-01\n&amp;quot;
m &amp;lt;- gregexpr(pattern = &amp;quot;\\d{1,2}[-/]\\d{1,2}[-/]\\d{2,4}&amp;quot;, text = text, 
    perl = TRUE)
regmatches(text, m)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [[1]]
## [1] &amp;quot;4/8/03&amp;quot;    &amp;quot;10-6-2004&amp;quot; &amp;quot;01-01-01&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;section-14&quot;&gt;至少重复的次数&lt;/h2&gt;
&lt;p&gt;使用{3,}表示至少重复3次&lt;/p&gt;

&lt;h2 id=&quot;section-15&quot;&gt;单词边界&lt;/h2&gt;
&lt;p&gt;使用\b表示单词的边界,\B表示不匹配边界&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;text &amp;lt;- &amp;quot;The cat scattered his foof all over the room&amp;quot;
m &amp;lt;- gregexpr(pattern = &amp;quot;cat&amp;quot;, text = text)
regmatches(text, m)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [[1]]
## [1] &amp;quot;cat&amp;quot; &amp;quot;cat&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;m &amp;lt;- gregexpr(pattern = &amp;quot;\\bcat\\b&amp;quot;, text = text)
regmatches(text, m)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [[1]]
## [1] &amp;quot;cat&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;section-16&quot;&gt;字符串边界&lt;/h2&gt;
&lt;p&gt;使用乘方符号(^)和美元符号($)来表示首尾。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;text &amp;lt;- &amp;quot;This is bad,real bad.  &amp;lt;?xml version=\&amp;quot;1.0\&amp;quot;?&amp;gt; &amp;quot;
m &amp;lt;- gregexpr(pattern = &amp;quot;\\s*&amp;lt;\\?xml.*\\?&amp;gt;&amp;quot;, text = text)
regmatches(text, m)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [[1]]
## [1] &amp;quot;  &amp;lt;?xml version=\&amp;quot;1.0\&amp;quot;?&amp;gt;&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;m &amp;lt;- gregexpr(pattern = &amp;quot;^\\s*&amp;lt;\\?xml.*\\?&amp;gt;&amp;quot;, text = text)
regmatches(text, m)  #这样可以检验出不合法的xml文档&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [[1]]
## character(0)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;section-17&quot;&gt;分行匹配模式&lt;/h2&gt;
&lt;p&gt;在分行模式下，还将匹配换行符后面的内容，使用分行模式需要使用(?m)来完成。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;text &amp;lt;- &amp;quot; %InLiNe_IdEnTiFiEr% \&amp;quot;#include&amp;lt;stdio.h&amp;gt;\&amp;quot;\n//ptrint Hello world\nint main()\n{\n//begin\nprintf(%,\&amp;quot;Hello world\&amp;quot;);\nreturn 0;\n//end\n}\n&amp;quot;
m &amp;lt;- gregexpr(pattern = &amp;quot;^\\s*//.*$&amp;quot;, text = text, perl = TRUE)
regmatches(text, m)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [[1]]
## character(0)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;m &amp;lt;- gregexpr(pattern = &amp;quot;(?m)^\\s*//.*$&amp;quot;, text = text, perl = TRUE)
regmatches(text, m)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [[1]]
## [1] &amp;quot;//ptrint Hello world&amp;quot; &amp;quot;//begin&amp;quot;              &amp;quot;//end&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;section-18&quot;&gt;子表达式&lt;/h2&gt;
&lt;p&gt;据一个例子来说明子表达式什么，比如我们处理”hellohellohello world hello world”这句话的时候我们想把其中的hello连在一起达到两次或者两次以上的字符串找出来，于是我们使用&lt;code&gt;hello{2,}&lt;/code&gt;，但是发现出来的结果和我们想要的有很大的差距，因为表示次数的式子只对离着最近的一个字母起作用。我们想要达到预想的效果需要把hello当作是一个整体，这个时候我们就需要用到子表达式。&lt;/p&gt;

&lt;p&gt;在正则表达式中，子表达式使用（）括起来就可以了，看下面的例子：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;text &amp;lt;- &amp;quot;hellohellohello world hello world&amp;quot;

m &amp;lt;- gregexpr(pattern = &amp;quot;hello{2,}&amp;quot;, text = text)
regmatches(x = text, m = m)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [[1]]
## character(0)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;m &amp;lt;- gregexpr(pattern = &amp;quot;(hello){2,}&amp;quot;, text = text)
regmatches(x = text, m = m)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [[1]]
## [1] &amp;quot;hellohellohello&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;section-19&quot;&gt;子表达式的嵌套&lt;/h3&gt;
&lt;p&gt;通过一个找出有效IP地址的例子中了解子表达式的嵌套，合法的IP必须满足数字小于255，我们看下面的例子:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;text &amp;lt;- &amp;quot;ping 167.42.223.4 and 56.256.2.3&amp;quot;
m &amp;lt;- gregexpr(pattern = &amp;quot;(((\\d{1,2})|(1\\d{2})|(2[0-4]\\d)|(25[0-5]))\\.){3}((\\d{1,2})|(1\\d{2})|(a[0-4]\\d)|(25[0-5]))&amp;quot;, 
    text = text)
regmatches(x = text, m = m)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [[1]]
## [1] &amp;quot;167.42.223.4&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;section-20&quot;&gt;回溯引用&lt;/h2&gt;
&lt;p&gt;回溯应用是对于子表达式来说的，简单的就是我们用一个符号来表示前面出现过的子表达式。通过下面的应用场合来了解，我们需要找出所有的标题：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;text &amp;lt;- &amp;quot;&amp;lt;BODY&amp;gt;\n&amp;lt;H1&amp;gt; H1&amp;lt;/H1&amp;gt;\nBababallll~~~\n&amp;lt;H2&amp;gt; H2&amp;lt;/H2&amp;gt;\nmiaomimaomi~~~~~\n&amp;lt;H3&amp;gt; H3&amp;lt;/H3&amp;gt;\nwangwangwang~~~\n&amp;lt;H4&amp;gt; H4&amp;lt;/H4&amp;gt;\n&amp;lt;BODY&amp;gt;&amp;quot;

m &amp;lt;- gregexpr(pattern = &amp;quot;&amp;lt;[hH][1-4]&amp;gt;.*?&amp;lt;/[hH][1-4]&amp;gt;&amp;quot;, text = text)  #懒惰型
regmatches(x = text, m = m)  #貌似可以工作，但是不通用&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [[1]]
## [1] &amp;quot;&amp;lt;H1&amp;gt; H1&amp;lt;/H1&amp;gt;&amp;quot; &amp;quot;&amp;lt;H2&amp;gt; H2&amp;lt;/H2&amp;gt;&amp;quot; &amp;quot;&amp;lt;H3&amp;gt; H3&amp;lt;/H3&amp;gt;&amp;quot; &amp;quot;&amp;lt;H4&amp;gt; H4&amp;lt;/H4&amp;gt;&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;m &amp;lt;- gregexpr(pattern = &amp;quot;&amp;lt;[hH][1-4]&amp;gt;.*&amp;lt;/[hH][1-4]&amp;gt;&amp;quot;, text = text)  #贪婪型
regmatches(x = text, m = m)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [[1]]
## [1] &amp;quot;&amp;lt;H1&amp;gt; H1&amp;lt;/H1&amp;gt;\nBababallll~~~\n&amp;lt;H2&amp;gt; H2&amp;lt;/H2&amp;gt;\nmiaomimaomi~~~~~\n&amp;lt;H3&amp;gt; H3&amp;lt;/H3&amp;gt;\nwangwangwang~~~\n&amp;lt;H4&amp;gt; H4&amp;lt;/H4&amp;gt;&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;m &amp;lt;- gregexpr(pattern = &amp;quot;&amp;lt;[hH]([1-4])&amp;gt;.*&amp;lt;/[hH]\\1&amp;gt;&amp;quot;, text = text)
regmatches(x = text, m = m)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [[1]]
## [1] &amp;quot;&amp;lt;H1&amp;gt; H1&amp;lt;/H1&amp;gt;&amp;quot; &amp;quot;&amp;lt;H2&amp;gt; H2&amp;lt;/H2&amp;gt;&amp;quot; &amp;quot;&amp;lt;H3&amp;gt; H3&amp;lt;/H3&amp;gt;&amp;quot; &amp;quot;&amp;lt;H4&amp;gt; H4&amp;lt;/H4&amp;gt;&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;section-21&quot;&gt;回溯引用在替代中的使用&lt;/h2&gt;
&lt;p&gt;直接看下面的例子:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;text &amp;lt;- &amp;quot;balabala~~~  gmail@gmail.com miaomiaomaio~~&amp;quot;
m &amp;lt;- gregexpr(pattern = &amp;quot;\\w+[\\w\\.]*@[\\w\\.]+\\.\\w+&amp;quot;, text = text, 
    perl = TRUE)
regmatches(x = text, m = m)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [[1]]
## [1] &amp;quot;gmail@gmail.com&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;sub(pattern = &amp;quot;(\\w+[\\w\\.]*@[\\w\\.]+\\.\\w+)&amp;quot;, replacement = &amp;quot;&amp;lt;A HREF=\\\&amp;quot;mailto:\\1\\\&amp;quot;&amp;gt;\\1&amp;lt;/A&amp;gt;&amp;quot;, 
    x = text, perl = TRUE)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## [1] &amp;quot;balabala~~~  &amp;lt;A HREF=\&amp;quot;mailto:gmail@gmail.com\&amp;quot;&amp;gt;gmail@gmail.com&amp;lt;/A&amp;gt; miaomiaomaio~~&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;注意R中sub和gsub（sub的全局版本）函数的使用。下面再看一个对电话号码重新排序的问题：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;text &amp;lt;- &amp;quot;324-245-2521\n324-255-6156&amp;quot;
text &amp;lt;- gsub(pattern = &amp;quot;(\\d{3})(-)(\\d{3})(-)(\\d{4})&amp;quot;, replacement = &amp;quot;\\(\\1\\) \\3-\\5&amp;quot;, 
    x = text, perl = TRUE)
cat(text)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;## (324) 245-2521
## (324) 255-6156&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;


  &lt;p&gt;&lt;a href=&quot;/cn/r/regular-expression-in-r-1/&quot;&gt;R中使用正则表达式（1）&lt;/a&gt; was originally published by HatMatrix at &lt;a href=&quot;&quot;&gt;HatMatrix&lt;/a&gt; on August 12, 2013.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Rstudio快捷键速查]]></title>
  <link rel="alternate" type="text/html" href="/cn/r/keyboard-shortcuts-of-rstudio/"/>
  <id>/cn/r/keyboard-shortcuts-of-rstudio</id>
  <published>2013-05-20T00:00:00+00:00</published>
  <updated>2013-05-20T00:00:00+00:00</updated>
  <author>
    <name>HatMatrix</name>
    <uri></uri>
    <email>hatmatrix42@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;手不离键盘是我们的追求，这也是我学习使用Emacs的主要原因之一，虽然很享受Emacs那种学会一招大小通吃的感觉，即使学习曲线陡了一点也还是值得的。但是Rstudio的吸引力实在太大了，使得我不得不放弃Emacs的ESS而投奔她。为了达到手不离键盘的程度，决定学习下快捷键，当我打开帮助文档的那一刹那惊呆了——怎么能有这么多快捷键，怎么能这么没规律！现在想想Emcas还是很人性的。以下是在尝试使用的时候记录下来的对键位的描述，其实就是对英文文档的简单翻译，自己记录下来留用。需要注意的是，无论在Windows下还是在Linux下，都会有少数几个快捷键会和系统快捷键冲突。我是没找到在Rstudio中设置快捷键的地方，如果需要只能把系统快捷键换了。&lt;/p&gt;

&lt;p&gt;#控制台&lt;/p&gt;

&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;描述&lt;/td&gt;
&lt;td&gt;键位(Windows和Linux)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;光标移动到控制台&lt;/td&gt;
&lt;td&gt;Ctrl+2&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;清除控制台&lt;/td&gt;
&lt;td&gt;Ctrl+L&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;移动光标到行首&lt;/td&gt;
&lt;td&gt;Home&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;移动光标到行尾&lt;/td&gt;
&lt;td&gt;End&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;调出以前使用过的命令&lt;/td&gt;
&lt;td&gt;上箭头/下箭头&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;弹出历史命令的菜单&lt;/td&gt;
&lt;td&gt;Ctrl+上箭头&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;中断当前正在执行的命令&lt;/td&gt;
&lt;td&gt;Esc&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;改变工作目录&lt;/td&gt;
&lt;td&gt;Ctrl+Shift+K&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;#源代码编辑区&lt;/p&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;描述&lt;/td&gt;
&lt;td&gt;键位(Windows和Linux)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;跳到上方的前往文件和函数的搜索框&lt;/td&gt;
&lt;td&gt;Ctrl+.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;使光标移向源文件编辑区&lt;/td&gt;
&lt;td&gt;Ctrl+1&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;新建文件(在Windows和Chrome中不起作用)&lt;/td&gt;
&lt;td&gt;Ctrl+Shift+N&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;打开文件&lt;/td&gt;
&lt;td&gt;Ctrl+O&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;保存文件&lt;/td&gt;
&lt;td&gt;Ctrl+S&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;关闭当前文件（Chrome中不起作用）&lt;/td&gt;
&lt;td&gt;Ctrl+W&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;关闭当前文件（仅在Chrome中其作用）&lt;/td&gt;
&lt;td&gt;Ctrl+Alt+W&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;关闭所有打开的文件&lt;/td&gt;
&lt;td&gt;Ctrl+Shift+W&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;预览HTML&lt;/td&gt;
&lt;td&gt;Ctrl+Shift+Y&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;使用Knitr转换成HTML&lt;/td&gt;
&lt;td&gt;Ctrl+Shift+H&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;编译PDF&lt;/td&gt;
&lt;td&gt;Ctrl+Shift+I&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;插入chunk（Sweave和Knitr）&lt;/td&gt;
&lt;td&gt;Ctrl+Atl+I&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;插入代码段&lt;/td&gt;
&lt;td&gt;Ctrl+Shift+R&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;运行当前行或者选择的行&lt;/td&gt;
&lt;td&gt;Ctrl+Enter&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;再次运行上次选择的块&lt;/td&gt;
&lt;td&gt;Ctrl+Shift+R&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;运行当前文件&lt;/td&gt;
&lt;td&gt;Ctrl+Alt+R&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;从文件开头运行到该行&lt;/td&gt;
&lt;td&gt;Ctrl+Alt+B&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;从该行运行到文件结束&lt;/td&gt;
&lt;td&gt;Ctrl+Alt+E&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;运行当前函数的定义部分&lt;/td&gt;
&lt;td&gt;Ctrl+Alt+F&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;运行当前的Sweave快&lt;/td&gt;
&lt;td&gt;Ctrl+Alt+C&lt;/td&gt;
&lt;/tr&gt;


&lt;tr&gt;
&lt;td&gt;运行下一个Sweave块&lt;/td&gt;
&lt;td&gt;Ctrl+Alt+N&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;加载一个文件&lt;/td&gt;
&lt;td&gt;Ctrl+Shift+O&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;加载当前文件&lt;/td&gt;
&lt;td&gt;Ctrl+Shift+S&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;加载当前文件，不输出结果&lt;/td&gt;
&lt;td&gt;Ctrl+Shift+Enter&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;折叠选择的代码&lt;/td&gt;
&lt;td&gt;ALt+L&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;展开折叠的代码&lt;/td&gt;
&lt;td&gt;Alt+Shift+L&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;折叠左右代码&lt;/td&gt;
&lt;td&gt;Alt+O&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;展开所有代码&lt;/td&gt;
&lt;td&gt;Alt+Shift+O&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;想要达到的行&lt;/td&gt;
&lt;td&gt;Shift+Alt+G&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;跳转到&lt;/td&gt;
&lt;td&gt;Shift+Alt+J&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;切换到选项卡&lt;/td&gt;
&lt;td&gt;Ctrl+Alt+Down(Linux会和默认的系统快捷键冲突)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;上一个选项卡&lt;/td&gt;
&lt;td&gt;Ctrl+PageUp&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;下一个选项卡&lt;/td&gt;
&lt;td&gt; Ctrl+PageDown&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;第一个选项卡&lt;/td&gt;
&lt;td&gt; Ctrl+Shift+Alt+Left&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;最后一个选项卡&lt;/td&gt;
&lt;td&gt; Ctrl+Shift+Alt+Right&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;选项卡向后导航&lt;/td&gt;
&lt;td&gt; Ctrl+F9&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt; 选项卡想钱导航&lt;/td&gt;
&lt;td&gt; Ctrl+F10&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;把选择的代码提取为一个函数&lt;/td&gt;
&lt;td&gt; Ctrl+Shift+U&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;行缩进进行整理代码 &lt;/td&gt;
&lt;td&gt;Ctrl+I&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt; 注释/消除注释当前行或者所选代码&lt;/td&gt;
&lt;td&gt; Ctrl+Shift+C&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;回流注释（不知道什么意思）&lt;/td&gt;
&lt;td&gt;Shift+Ctrl+/ &lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;上下移动整行 &lt;/td&gt;
&lt;td&gt;Alt+上肩头/下箭头&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;复制行&lt;/td&gt;
&lt;td&gt; Shift+Alt+上箭头/下箭头&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;跳转到匹配的括号&lt;/td&gt;
&lt;td&gt; Ctrl+P&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;查找替换&lt;/td&gt;
&lt;td&gt; Ctrl+F&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;查找上一个&lt;/td&gt;
&lt;td&gt;Shift+F3(Windows);Ctrl+Shift+G(Linux) &lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;查找下一个&lt;/td&gt;
&lt;td&gt; F3（Windows）；Ctrl+G&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;在文件中寻找&lt;/td&gt;
&lt;td&gt; Ctrl+Shift+F&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;检查拼写（需要字典的支持）&lt;/td&gt;
&lt;td&gt; F7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;#在控制台和源码编辑器中编辑&lt;/p&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;撤消&lt;/td&gt;
&lt;td&gt;Ctrl+Z&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;回到撤消前&lt;/td&gt;
&lt;td&gt;Crtrl+Shift+Z&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;剪切&lt;/td&gt;
&lt;td&gt;Ctrl+X（这个吐槽下，由于用Emacs的习惯，总是Ctrl-X-Ctrl-S保存）&lt;/td&gt;
&lt;/tr&gt;


&lt;tr&gt;
&lt;td&gt;拷贝&lt;/td&gt;
&lt;td&gt;Ctrl+C&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;粘贴&lt;/td&gt;
&lt;td&gt;Ctrl+V&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;全选&lt;/td&gt;
&lt;td&gt;Ctrl+A&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;按词为单位跳动&lt;/td&gt;
&lt;td&gt;Ctrl+左/右箭头&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;跳到开头/结尾&lt;/td&gt;
&lt;td&gt;Ctrl+Home/End&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;删除行&lt;/td&gt;
&lt;td&gt;Ctrl+D&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;选择&lt;/td&gt;
&lt;td&gt;Shift+箭头&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;选择单词&lt;/td&gt;
&lt;td&gt;Ctrl+Shift+左/右箭头&lt;/td&gt;
&lt;/tr&gt;


&lt;tr&gt;
&lt;td&gt;选择到行首&lt;/td&gt;
&lt;td&gt;Ctrl+Alt+左箭头&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;选择到行尾&lt;/td&gt;
&lt;td&gt;Ctrl+ALt+右箭头&lt;/td&gt;
&lt;/tr&gt;


&lt;tr&gt;
&lt;td&gt;向下/上选择页&lt;/td&gt;
&lt;td&gt;Shift+PageDown/PageUp&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;选择到文章开始/结束&lt;/td&gt;
&lt;td&gt;Ctrl+Shift+Home/End&lt;/td&gt;
&lt;/tr&gt;


&lt;tr&gt;
&lt;td&gt;删除左边的单词&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;缩进&lt;/td&gt;
&lt;td&gt;Tab&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;凸出&lt;/td&gt;
&lt;td&gt;Shift+Tab&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;使得光标处的文字移到行开头&lt;/td&gt;
&lt;td&gt;Ctrl+U&lt;/td&gt;
&lt;/tr&gt;


&lt;tr&gt;
&lt;td&gt;使得光标处的文字移到行结尾&lt;/td&gt;
&lt;td&gt;Ctrl+K&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;召回当前Yank(怎么翻译)的文字（有点Emacs的味道哦）&lt;/td&gt;
&lt;td&gt;Ctrl+Y&lt;/td&gt;
&lt;/tr&gt;


&lt;tr&gt;
&lt;td&gt;插入赋值符号&lt;/td&gt;
&lt;td&gt;Ctrl+-(这个对=控没什么用)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;展示函数的帮助&lt;/td&gt;
&lt;td&gt;F1(很有用，除非你是骨灰级高手，要不然帮组还是要看的)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;展示函数的源代码&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;F2(不解释，谁用谁知道)&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;#补全&lt;/p&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;尝试补全&lt;/td&gt;
&lt;td&gt;Tab或者Ctrl+Space&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;候选项导航&lt;/td&gt;
&lt;td&gt;上/下箭头&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;选择待选项&lt;/td&gt;
&lt;td&gt;Enter或者Tab或者右箭头&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;取消候选菜单&lt;/td&gt;
&lt;td&gt;Esc&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;h1 id=&quot;section&quot;&gt;浏览&lt;/h1&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;把光标焦点移动到源代码编辑框&lt;/td&gt;
&lt;td&gt;Ctrl+1&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;光标焦点移动到控制台&lt;/td&gt;
&lt;td&gt;Ctrl+2&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;光标移动到帮组文档中&lt;/td&gt;
&lt;td&gt; Ctrl+3&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;展现历史命令&lt;/td&gt;
&lt;td&gt; Ctrl+4&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;展示文件 &lt;/td&gt;
&lt;td&gt; Ctrl+5&lt;/td&gt;
&lt;/tr&gt;


&lt;tr&gt;
&lt;td&gt;展示图像 &lt;/td&gt;
&lt;td&gt;Ctrl+6 &lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;展示包&lt;/td&gt;
&lt;td&gt; Ctrl+7&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;展示工作空间 &lt;/td&gt;
&lt;td&gt; Ctrl+8&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;战士Git或者SVN &lt;/td&gt;
&lt;td&gt;Ctrl+9&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;同步编辑或者PDF预览&lt;/td&gt;
&lt;td&gt;Ctrl+F8&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;#构建&lt;/p&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;构建和重新加载&lt;/td&gt;
&lt;td&gt;Ctrl+Shift+B&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;加载全部&lt;/td&gt;
&lt;td&gt;Ctrl+Shift+L&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;检查包&lt;/td&gt;
&lt;td&gt;Ctrl+Shift+E&lt;/td&gt;
&lt;/tr&gt;

&lt;/table&gt;

&lt;p&gt;#画图&lt;/p&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;预览图像&lt;/td&gt;
&lt;td&gt;Ctrl+Shift+PageUp&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;下一副图像&lt;/td&gt;
&lt;td&gt;Ctrl+Shift+PageDown&lt;/td&gt;
&lt;/tr&gt;

&lt;/table&gt;

&lt;p&gt;未完，头晕了，比学Emacs的时候还有郁闷，明天继续（2013/5/20）。&lt;/p&gt;

&lt;p&gt;完，多练习（2013/5/21）。&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;/cn/r/keyboard-shortcuts-of-rstudio/&quot;&gt;Rstudio快捷键速查&lt;/a&gt; was originally published by HatMatrix at &lt;a href=&quot;&quot;&gt;HatMatrix&lt;/a&gt; on May 20, 2013.&lt;/p&gt;</content>
</entry>

</feed>
